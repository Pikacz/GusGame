// THIS FILE IS GENERATED BY TOOL, PLEASE DO NOT EDIT!

import Foundation

struct R {

    enum string : String {
        /// Growth of GDP
        case data_dataset1_name
        /// Growth of population
        case data_dataset2_name
        /// Ok
        case game_change_confirm_btn
        /// Pass phone to %1$@
        case game_change_player_text
        /// Confrim
        case game_delegate_confirm_btn
        /// Delegate workers
        case game_delegate_workers_title
        /// End turn
        case game_end_turn_btn
        /// Select %1$@
        case game_select_country
        /// Andorra
        case game_select_country_country_AD
        /// Albania
        case game_select_country_country_AL
        /// Armenia
        case game_select_country_country_AM
        /// Austria
        case game_select_country_country_AU
        /// Azerbaijan
        case game_select_country_country_AZ
        /// Bosnia and Herzegovina
        case game_select_country_country_BA
        /// Belgium
        case game_select_country_country_BE
        /// Bulgaria
        case game_select_country_country_BG
        /// Belarus
        case game_select_country_country_BY
        /// Switzerland
        case game_select_country_country_CH
        /// Czech Republic
        case game_select_country_country_CY
        /// Germany
        case game_select_country_country_DE
        /// Denmark
        case game_select_country_country_DK
        /// Estonia
        case game_select_country_country_EE
        /// Greece
        case game_select_country_country_EL
        /// Spain
        case game_select_country_country_ES
        /// Finland
        case game_select_country_country_FI
        /// France
        case game_select_country_country_FR
        /// Georgia
        case game_select_country_country_GE
        /// Croatia
        case game_select_country_country_HR
        /// Hungary
        case game_select_country_country_HU
        /// Ireland
        case game_select_country_country_IE
        /// Iceland
        case game_select_country_country_IS
        /// Italy
        case game_select_country_country_IT
        /// Liechtenstein
        case game_select_country_country_LI
        /// Lithuania
        case game_select_country_country_LT
        /// Luxembourg
        case game_select_country_country_LU
        /// Latvia
        case game_select_country_country_LV
        /// Monaco
        case game_select_country_country_MC
        /// Moldova
        case game_select_country_country_MD
        /// RepublicOfMacedonia
        case game_select_country_country_MK
        /// Malta
        case game_select_country_country_MT
        /// Netherlands
        case game_select_country_country_NL
        /// Norway
        case game_select_country_country_NO
        /// Poland
        case game_select_country_country_PL
        /// Portugal
        case game_select_country_country_PT
        /// Romania
        case game_select_country_country_RO
        /// Serbia
        case game_select_country_country_RS
        /// Russia
        case game_select_country_country_RU
        /// Sweden
        case game_select_country_country_SE
        /// Slovenia
        case game_select_country_country_SI
        /// Slovakia
        case game_select_country_country_SK
        /// San Marino
        case game_select_country_country_SM
        /// Turkey
        case game_select_country_country_TR
        /// Ukraine
        case game_select_country_country_UA
        /// United Kingdom
        case game_select_country_country_UK
        /// Wrong country!!
        case game_select_country_invalid
        /// Ok
        case game_tutorial_close_btn
        /// ▰4 players; 
        ///  ▰Each player has 100 employees; 
        ///  ▰6 Rynków (Krajów) to be developed; 
        ///  ▰Each player may delegate a maximum of 15 employees per turn; 
        ///  ▰ Chosen people; 
        ///  ▰Country player player with employee glasses 
        ///  for this time after all rounds. 
        ///  ▰ The players compete against each other in turn-based muliplayer on one device; 
        ///  ▰Each player after delegating employees to the pole field 
        ///  for goodbye, three statistics in the form of histograms and statistics points; 
        ///  ▰ Then in the mailbox it is a function of the offer of years for each 
        ///  from three cubo rectangles, i.e. statistics and state user; 
        ///  ▰The game goes on until the last player exerts all of its employees. 
        ///  ▰Additional element for learning at the beginning of each turn 
        ///  - indication by each beginning of the day. 
        ///  Multiple points per player: 
        ///  ▰ For 3 correct answers - number of employees is multiplied by 2. 
        ///  ▰ For 1 correct answer - the number of employees that I delegated at the beginning 
        ///  ▰ For 0 correct answers - the number of employees divided by 2. 
        /// 
        case game_tutorial_text
        /// test it's ok
        case test
        /// integer %d, string %@
        case test_parameters1
        /// string %2$@, integer %1$d
        case test_parameters2
    }

    enum plurals : String {
        case game_delegate_workers_count
        case test_plurals

        subscript(quantity: Int) -> String {
            return String.localizedStringWithFormat(NSLocalizedString(self.rawValue, comment: ""), quantity)
        }
    }

}

